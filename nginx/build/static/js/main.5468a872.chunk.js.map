{"version":3,"sources":["assets/weSolvvoLogoMotto.png","components/common/Header.js","utils/Notifications.js","utils/Constants.js","utils/Axios.js","redux/actions/auth.js","redux/reducers/index.js","redux/store/store.js","utils/errorHandler.js","components/login/ResetDialog.js","redux/actions/reset.js","redux/actions/tracking.js","components/login/Login.js","components/tablet/SignatureModal.js","components/common/ConfirmDialog.js","components/common/Navbar.js","redux/actions/companies.js","components/tablet/UserView.js","redux/actions/tablet.js","components/resetPass/ResetPass.js","components/common/EditDialog.js","redux/actions/users.js","redux/actions/entries.js","components/entriesList/InfoModal.js","components/entriesList/EntriesList.js","utils/Theme.js","components/companies/AddCompanyDialog.js","components/companies/Companies.js","components/tracking/Tracking.js","components/users/AddUserDialog.js","components/users/Users.js","Root.js","index.js"],"names":["useStyles","makeStyles","theme","image","width","Header","classes","src","Logo","className","toast","configure","configSuccess","position","configError","message","success","error","CONSTANTS","BACKEND_URL","FRONTEND_URL","DATE_FORMAT","CODES","ACCESS","FORBIDDEN","PARSE_INT_RADIX","ROWS_PER_PAGE_ARRAY","INITIAL_ROWS_PER_PAGE","DURATION_ARRAY","CANVAS","HEIGHT","WIDTH","instance","axios","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Promise","reject","logout","dispatch","removeItem","type","initialState","user","isLogged","persistConfig","key","storage","persistedReducer","persistReducer","state","action","payload","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","persistor","persistStore","errorHandler","response","status","StatusCodes","UNAUTHORIZED","Notifications","RO","notifications","TOKEN_EXPIRED","field","data","NAME_ALREADY_EXISTS","EMAIL_ALREADY_EXISTS","PHONE_ALREADY_EXISTS","SERVER_ERROR","require","resetLink","color","display","justifyContent","marginTop","cursor","fontSize","closeIcon","backgroundColor","height","minWidth","marginRight","buttonContainer","actionsContainer","marginLeft","connect","sendEmail","email","post","then","resp","catch","props","React","useState","open","setOpen","setEmail","handleClose","Link","variant","onClick","reset","Dialog","aria-labelledby","DialogTitle","id","Button","DialogContent","DialogContentText","resetMessage","TextField","autoFocus","margin","label","auth","fullWidth","onChange","event","target","value","DialogActions","cancel","code","USER_NOT_FOUND","AUTH_SUCCESS","OK","EMAIL_SENT","send","createLog","name","surname","table","tracking","date","Date","Login","password","role","setState","handleLogin","emailIsValid","validator","isEmail","passIsValid","isEmpty","login","userFound","history","push","setItem","usersTable","INCORRECT_PASS","PASS_INCORRECT","EMAIL_INCORRECT","onRegisterButtonClick","this","header","Container","component","maxWidth","CssBaseline","Typography","noValidate","required","autoComplete","onKeyPress","Grid","container","item","Component","withStyles","button","marginBottom","Modal","handleClickOpen","sign","aria-describedby","buttons","ref","canvasDraw","saveableCanvas","brushColor","brushRadius","canvasWidth","canvasHeight","clear","JSON","parse","getSaveData","lines","length","showDrawing","SIGNATURE_ERROR","save","export","textDecoration","powerIcon","deleteButton","exportButton","deleteMessage","no","onDeleteButton","yes","exportMessage","filename","exportFile","entriesTable","logoutMessage","onLogOutButton","root","title","flexGrow","selectedButton","tabletIcon","entriesIcon","companyIcon","registerIcon","paddingToolbar","paddingLeft","paddingRight","navButtonsContainer","useHistory","AppBar","Toolbar","path","entriesNav","tablet","trackingNav","companiesNav","usersNav","getCompanies","page","rows","get","UserView","phone","company","show","series","number","duration","observations","fields","errorName","errorSurname","errorEmail","errorCompany","errorPhone","errorSignature","errorSeries","errorNumber","errorDuration","errorObservations","companies","handleChange","handleEntries","isOk","countErrors","auxFields","errorDuraion","Object","entries","forEach","isAlpha","isMobilePhone","isNumeric","entry","signature","createUser","ENTRY_REGISTRATION","DATA_ERROR","fullHeight","showTabletButton","showLogoutButton","location","pathname","tabletForm","flexContainer","identityFields","FormControl","InputLabel","Select","labelId","map","time","index","MenuItem","menuItem","gridContainer","disabled","hideGrid","loadableCanvas","saveData","loadTimeOffset","buttonsContainer","nextButton","next","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","gridArea","bottom","left","right","top","transform","WebkitTransform","checkToken","TOKEN","updatePassword","ID","put","useParams","expired","setExpired","firstPass","setFirstPass","secondPass","setSecondPass","useEffect","linkExpired","newPass","new_password","ENTRY_ERROR","IDENTICAL_PASS","SUCCESS_PASS","editButton","seriesWidth","editCompany","editEntry","editUser","getCompaniesSelector","setData","setCompanies","errors","setErrors","edit","representative","auxErrors","stringify","_id","getEntries","SUCCESS_EDIT","console","log","companiesTable","getUsers","onSaveClick","closeButton","FormDialog","row","onCloseModal","details","close","columns","actions","EntriesList","rowsPerPage","startDate","moment","startOf","toDate","endDate","endOf","count","csvData","showFilterIcon","currentRow","aux","setInitialDate","initialDate","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","deleteEntry","delete","onCloseFilter","stopPropagation","onFilterClick","DATE_ERROR","isSame","onArrowClick","step","NEXT","add","subtract","isAfter","dateSelector","arrowButton","PREV","utils","DateFnsUtils","autoOk","maxDate","format","dateFormat","sort","KeyboardButtonProps","datepicker","filter","filterCloseButton","filterCloseIcon","keys","TableContainer","Table","tablePadding","TableHead","TableRow","column","TableCell","size","align","style","TableBody","hover","selectableRows","tagName","toLowerCase","TablePagination","paginationMargin","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","paddingBottom","zIndex","createMuiTheme","overrides","MuiTableCell","head","fontWeight","body","MuiTableRow","MuiButton","createButton","createCompany","newCompany","initialFields","setCompany","addCompany","SUCCESS_ADD_COMPANY","deleteCompany","setPage","setRows","setCount","getLogs","setTracking","Register","errorRole","handleRegister","ADMIN_REGISTRATION","ADMIN_FAIL_REGISTRATION","addUser","deleteUser","users","setUsers","AddUserDialog","ThemeProvider","exact","ResetPass","to","Companies","Tracking","Users","ReactDOM","render","StrictMode","loading","document","getElementById","Root"],"mappings":"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","file":"static/js/main.5468a872.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/weSolvvoLogoMotto.e21de293.png\";","import React from 'react'\r\nimport Logo from '../../assets/weSolvvoLogoMotto.png'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    width: '150px',\r\n  },\r\n}))\r\n\r\nfunction Header() {\r\n  const classes = useStyles()\r\n  return (\r\n    <header>\r\n      <img src={Logo} className={classes.image} />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { toast } from \"react-toastify\"\r\nimport 'react-toastify/dist/ReactToastify.css'\r\ntoast.configure()\r\n\r\nconst configSuccess = {\r\n    position: \"bottom-right\"\r\n}\r\n\r\nconst configError = {\r\n    position: \"bottom-right\"\r\n}\r\n\r\nexport default {\r\n    success: message => toast.success(message, configSuccess),\r\n    error: message => toast.error(message, configError)\r\n}","const CONSTANTS = {\r\n  BACKEND_URL : 'http://localhost/api',\r\n  FRONTEND_URL : 'http://localhost:3000',\r\n  DATE_FORMAT:'YYYY/MM/DD',\r\n  CODES: {\r\n    ACCESS: 202,\r\n    FORBIDDEN : 403\r\n  },\r\n  PARSE_INT_RADIX: 10,\r\n  ROWS_PER_PAGE_ARRAY : [15, 25, 50],\r\n  INITIAL_ROWS_PER_PAGE : 15,\r\n  DURATION_ARRAY : ['00:30 ore', '01:00 ore', '01:30 ore', '02:00 ore', '02:30 ore', '03:00 ore', '03:30 ore', '04.00 ore', \r\n                '04:30 ore', '05:00 ore', '05:30 ore', '06:00 ore', '06:30 ore', '07:00 ore', '07:30 ore', '08:00 ore'],\r\n  CANVAS: {\r\n    HEIGHT: '150',\r\n    WIDTH: '150'\r\n  }\r\n}\r\nexport default CONSTANTS\r\n    \r\n\r\n","import axios from 'axios'\r\nimport CONSTANTS from './Constants'\r\n\r\nconst instance =  axios.create ({\r\n    baseURL: CONSTANTS.BACKEND_URL,\r\n    withCredentials: true\r\n})\r\n\r\ninstance.interceptors.request.use(config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) config.headers['Authorization'] = 'Bearer ' + token\r\n    return config\r\n}, error => {\r\n    Promise.reject(error)\r\n})\r\n\r\nexport default instance","import axios from '../../utils/Axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\n\r\nexport const auth = (user) => (dispatch) =>\r\n  axios\r\n    .post('/auth', user)\r\n    .then((response) => {\r\n      if (response.data.userFound) {\r\n        dispatch({ type: 'LOGIN', payload: response.data.userFound })\r\n      }\r\n      return response.data\r\n    })\r\n    .catch(errorHandler)\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('token')\r\n  dispatch({ type: 'LOGOUT' })\r\n}\r\n","const initialState = {user: \"\", isLogged: false}\r\nexport default (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':{\r\n            return {\r\n                ...state,\r\n                user : action.payload,\r\n                isLogged: true\r\n           }\r\n        }\r\n        case 'LOGOUT':{\r\n            return {\r\n                ...state,\r\n                user : '',\r\n                isLogged: false\r\n           }\r\n        }\r\n\r\n        default: return state  \r\n    }\r\n    \r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport loginReducer from '../reducers/index'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n\r\nconst persistedReducer = persistReducer(persistConfig, loginReducer)\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n\r\nexport const store = createStore(persistedReducer, composedEnhancer)\r\nexport const persistor = persistStore(store)\r\n","import { StatusCodes } from 'http-status-codes'\r\nimport { logout } from '../redux/actions/auth'\r\nimport { store } from '../redux/store/store'\r\nimport Notifications from './Notifications'\r\nimport RO from '../utils/language/RO.json'\r\n\r\nconst errorHandler = (error) => {\r\n  if (\r\n    error.response.status &&\r\n    error.response.status === StatusCodes.UNAUTHORIZED\r\n  ) {\r\n    store.dispatch(logout())\r\n    Notifications.error(RO.notifications.TOKEN_EXPIRED)\r\n  } else if (\r\n    error.response.status &&\r\n    error.response.status === StatusCodes.FORBIDDEN\r\n  ) {\r\n    let field = error.response.data.field[0] \r\n    if(field === 'name')\r\n      Notifications.error(RO.notifications.NAME_ALREADY_EXISTS)\r\n    else if(field === 'email')\r\n      Notifications.error(RO.notifications.EMAIL_ALREADY_EXISTS)\r\n    else if(field === 'phone')\r\n      Notifications.error(RO.notifications.PHONE_ALREADY_EXISTS)\r\n  }\r\n  else Notifications.error(RO.notifications.SERVER_ERROR) \r\n}\r\n\r\nexport default errorHandler\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Link from '@material-ui/core/Link'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Notifications from '../../utils/Notifications'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { connect } from 'react-redux'\r\nimport { sendEmail } from '../../redux/actions/reset'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetLink: {\r\n    color: '#3f50b5',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: '2%',\r\n    cursor: 'pointer',\r\n    fontSize: '1.05rem',\r\n    '&:hover': {\r\n      color: '#0e24a1',\r\n    },\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginRight: '24px',\r\n    marginTop: '16px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginRight: '1em',\r\n  },\r\n}))\r\n\r\nfunction ResetDialog(props) {\r\n  const [open, setOpen] = React.useState(false)\r\n  const [email, setEmail] = React.useState('')\r\n  const classes = useStyles()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setEmail(event.target.value)\r\n  }\r\n\r\n  const handleEmail = () => {\r\n    props.sendEmail(email).then((resp) => {\r\n      const { status, code } = resp\r\n      if (\r\n        status === RO.notifications.USER_NOT_FOUND &&\r\n        code === StatusCodes.FORBIDDEN\r\n      )\r\n        Notifications.error(RO.notifications.USER_NOT_FOUND)\r\n      else if (\r\n        status === RO.notifications.AUTH_SUCCESS &&\r\n        code === StatusCodes.OK\r\n      )\r\n        Notifications.success(RO.notifications.EMAIL_SENT)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        className={classes.resetLink}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        {RO.reset}\r\n      </Link>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <div className={classes.buttonContainer}>\r\n          <DialogTitle id=\"form-dialog-title\">{RO.reset}</DialogTitle>\r\n          <Button onClick={handleClose} className={classes.closeIcon}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        <DialogContent>\r\n          <DialogContentText>{RO.resetMessage}</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={RO.auth.email}\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={onChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.actionsContainer}>\r\n          <Button color=\"default\" variant=\"contained\" onClick={handleClose}>\r\n            {RO.cancel}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              handleClose()\r\n              handleEmail()\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            {RO.send}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendEmail: (email) => dispatch(sendEmail(email)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ResetDialog)\r\n","import axios from '../../utils/Axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\n\r\nexport const checkToken = (TOKEN) => (dispatch) =>\r\n  axios\r\n    .get(`reset/${TOKEN}`)\r\n    .then((resp) => resp.data)\r\n    .catch(errorHandler)\r\n\r\nexport const updatePassword = (ID, password) => (dispatch) =>\r\n  axios\r\n    .put(`/reset/${ID}`, { password })\r\n    .then((resp) => resp.data)\r\n    .catch(errorHandler)\r\n\r\nexport const sendEmail = (email) => (dispatch) =>\r\n  axios\r\n    .post(`/reset`, { email })\r\n    .then((resp) => resp.data)\r\n    .catch(errorHandler)\r\n","import axios from '../../utils/Axios'\r\nimport Notifications from '../../utils/Notifications'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nexport const createLog = (name, surname, action, table) => (dispatch) => {\r\n  let tracking = {\r\n    name: name,\r\n    surname: surname,\r\n    action: action,\r\n    table: table,\r\n    date: new Date(),\r\n  }\r\n  return axios\r\n    .post(`/tracking`, { tracking })\r\n    .then((resp) => ({ ...resp.data }))\r\n    .catch(errorHandler)\r\n}\r\n\r\nexport const getLogs = (page, rows) => (dispatch) =>\r\n  axios\r\n    .get(`/tracking/?page=${page}&rows=${rows}`)\r\n    .then((resp) => ({ ...resp.data }))\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Header from '../common/Header'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport validator from 'validator'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport DialogReset from './ResetDialog'\r\nimport { connect } from 'react-redux'\r\nimport { auth } from '../../redux/actions/auth'\r\nimport Notifications from '../../utils/Notifications'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '1em',\r\n    marginBottom: '1em'\r\n  },\r\n})\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    role: '',\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  handleLogin = () => {\r\n    let emailIsValid = validator.isEmail(this.state.email)\r\n    let passIsValid = !validator.isEmpty(this.state.password)\r\n\r\n    if (emailIsValid && passIsValid) {\r\n      let user = { user: this.state }\r\n\r\n      this.props.login(user).then((response) => {\r\n        if (response.userFound) {\r\n          if (response.userFound.role === 'super')\r\n            this.props.history.push('/tracking')\r\n          else this.props.history.push('/entries')\r\n\r\n          localStorage.setItem('token', response.token)\r\n          this.props.createLog(this.props.user.name, this.props.user.surname, RO.tracking.login, RO.tracking.usersTable)\r\n        } else if (\r\n          response.code === StatusCodes.FORBIDDEN &&\r\n          response.status === RO.notifications.USER_NOT_FOUND\r\n        )\r\n          Notifications.error(RO.notifications.USER_NOT_FOUND)\r\n        else if (\r\n          response.code === StatusCodes.FORBIDDEN &&\r\n          response.status === RO.notifications.INCORRECT_PASS\r\n        )\r\n          Notifications.error(RO.notifications.INCORRECT_PASS)\r\n        else Notifications.error(RO.notifications.SERVER_ERROR)\r\n      })\r\n    } else {\r\n      if (!emailIsValid) Notifications.error(RO.notifications.EMAIL_INCORRECT)\r\n      else Notifications.error(RO.notifications.PASS_INCORRECT)\r\n    }\r\n  }\r\n\r\n  onRegisterButtonClick = () => {\r\n    this.props.history.push('/register')\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <div className={classes.header}>\r\n          <Header />\r\n        </div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              {RO.login}\r\n            </Typography>\r\n            <form noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label={RO.auth.email}\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={this.onChange}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label={RO.auth.password}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={this.onChange}\r\n                onKeyPress={(event) =>\r\n                  event.key === 'Enter' ? this.handleLogin() : null\r\n                }\r\n              />\r\n              <Button fullWidth onClick={this.handleLogin}>\r\n                {RO.login}\r\n              </Button>\r\n              <DialogReset />\r\n\r\n              <Grid container>\r\n                <Grid item></Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (user) => dispatch(auth(user)),\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Login))\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport CanvasDraw from 'react-canvas-draw'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Notifications from '../../utils/Notifications'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst styles = theme => ({\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    width: '2.3em',\r\n    marginRight: '1.6em',\r\n    minWidth: '1em'\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex', \r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginRight: '1em'\r\n  },\r\n})\r\n\r\nclass Modal extends React.Component{\r\n\r\n  state = {\r\n    open : false\r\n  }\r\n  \r\n  handleClickOpen = () => {\r\n    this.setState({open : true})\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({open : false})\r\n  };\r\n\r\n  render(){\r\n    const {classes} = this.props\r\n    return (\r\n      <div>\r\n        <Button onClick={() => this.handleClickOpen()}>\r\n          {RO.sign}\r\n        </Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth={'md'}\r\n          fullWidth={true}\r\n        >\r\n          <div className={classes.buttons}>\r\n            <Button onClick={this.handleClose} className={classes.closeIcon}><CloseIcon/></Button>\r\n          </div>\r\n          <DialogContent>\r\n            \r\n              <CanvasDraw\r\n                ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\r\n                brushColor={\"#009933\"}\r\n                brushRadius={3}\r\n                canvasWidth={910}\r\n                canvasHeight={400}\r\n              /> \r\n              \r\n            \r\n          </DialogContent>\r\n          <DialogActions className={classes.actionsContainer}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  this.saveableCanvas.clear();\r\n                }}\r\n              >\r\n                {RO.clear}\r\n              </Button> \r\n              <Button\r\n                onClick={() => {\r\n                if(JSON.parse(this.saveableCanvas.getSaveData()).lines.length){\r\n                  localStorage.setItem(\r\n                    \"savedDrawing\",\r\n                    this.saveableCanvas.getSaveData()\r\n                  );\r\n                  this.handleClose()\r\n                  this.props.showDrawing()\r\n                }\r\n                else Notifications.error(RO.notifications.SIGNATURE_ERROR)\r\n                      \r\n                }}\r\n                >\r\n                {RO.save}\r\n              </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Modal)\r\n\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport { CSVLink } from 'react-csv'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  export: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  logout: {\r\n    marginTop: '0.5em',\r\n    backgroundColor: 'inherit',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n  },\r\n  powerIcon: {\r\n    color: 'black',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: 'inherit',\r\n    height: '1.5rem',\r\n    width: '1.5rem',\r\n    minWidth: '1rem',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    color: 'black',\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginRight: '24px',\r\n    marginTop: '16px'\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  exportButton: {\r\n    marginTop: '2em',\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginRight: '1em',\r\n  },\r\n}))\r\n\r\nfunction ConfirmDialog(props) {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleClickOpen = (event) => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = (event) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div>\r\n      {props.type === 'delete' ? (\r\n        <Button className={classes.deleteButton} onClick={handleClickOpen}>\r\n          <DeleteIcon />\r\n        </Button>\r\n      ) : props.type === 'export' ? (\r\n        <Button onClick={handleClickOpen} className={classes.exportButton}>\r\n          {RO.export}\r\n        </Button>\r\n      ) : props.type === 'logout' ? (\r\n        <Button onClick={handleClickOpen} className={classes.logout}>\r\n          <PowerSettingsNewIcon className={classes.powerIcon} />\r\n        </Button>\r\n      ) : null}\r\n      <Dialog\r\n        open={open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {props.type === 'delete' ? (\r\n          <div>\r\n            <div className={classes.buttonContainer}>\r\n              <DialogTitle id=\"alert-dialog-title\">{RO.clear}</DialogTitle>\r\n              <Button onClick={handleClose} className={classes.closeIcon}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {RO.deleteMessage}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions className={classes.actionsContainer}>\r\n              <Button\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                onClick={handleClose}\r\n                autoFocus\r\n              >\r\n                {RO.no}\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  handleClose()\r\n                  props.onDeleteButton()\r\n                }}\r\n              >\r\n                {RO.yes}\r\n              </Button>\r\n            </DialogActions>\r\n          </div>\r\n        ) : props.type === 'export' ? (\r\n          <div>\r\n            <div className={classes.buttonContainer}>\r\n              <DialogTitle id=\"alert-dialog-title\">{RO.export}</DialogTitle>\r\n              <Button onClick={handleClose} className={classes.closeIcon}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {RO.exportMessage}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions className={classes.actionsContainer}>\r\n              <Button\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                onClick={handleClose}\r\n                autoFocus\r\n              >\r\n                {RO.no}\r\n              </Button>\r\n\r\n              <CSVLink\r\n                data={props.data}\r\n                className={classes.export}\r\n                filename={RO.exportFile}\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    handleClose()\r\n                    props.createLog(\r\n                      props.user.name,\r\n                      props.user.surname,\r\n                      RO.tracking.export,\r\n                      RO.tracking.entriesTable\r\n                    )\r\n                  }}\r\n                >\r\n                  {RO.yes}\r\n                </Button>\r\n              </CSVLink>\r\n            </DialogActions>\r\n          </div>\r\n        ) : props.type === 'logout' ? (\r\n          <div>\r\n            <div className={classes.buttonContainer}>\r\n              <DialogTitle id=\"alert-dialog-title\">{RO.logout}</DialogTitle>\r\n              <Button onClick={handleClose} className={classes.closeIcon}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {RO.logoutMessage}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions className={classes.actionsContainer}>\r\n              <Button\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                onClick={handleClose}\r\n                autoFocus\r\n              >\r\n                {RO.no}\r\n              </Button>\r\n              <Button\r\n                onClick={(event) => {\r\n                  handleClose(event)\r\n                  props.onLogOutButton()\r\n                }}\r\n              >\r\n                {RO.yes}\r\n              </Button>\r\n            </DialogActions>\r\n          </div>\r\n        ) : null}\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmDialog)\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport TabletAndroidIcon from '@material-ui/icons/TabletAndroid'\r\nimport ListAltIcon from '@material-ui/icons/ListAlt'\r\nimport { useHistory } from 'react-router'\r\nimport Header from '../common/Header'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions/auth'\r\nimport ConfirmationDialog from '../common/ConfirmDialog'\r\nimport BusinessIcon from '@material-ui/icons/Business'\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '1em',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: '2.5%'\r\n  },\r\n  button: {\r\n    marginTop: '0.5em',\r\n    backgroundColor: 'inherit',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    marginRight: '1em',\r\n  },\r\n  selectedButton: {\r\n    marginTop: '0.5em',\r\n    backgroundColor: '#DADADA',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    marginRight: '1em',\r\n  },\r\n  powerIcon: {\r\n    color: 'black',\r\n  },\r\n  tabletIcon: {\r\n    fontSize: '1rem',\r\n    marginRight: '5%',\r\n  },\r\n  entriesIcon: {\r\n    fontSize: '1.2rem',\r\n    marginRight: '5%',\r\n  },\r\n  companyIcon: {\r\n    fontSize: '1.2rem',\r\n    marginRight: '5%',\r\n  },\r\n  registerIcon: {\r\n    fontSize: '1.2rem',\r\n    marginRight: '5%',\r\n  },\r\n  paddingToolbar: {\r\n    paddingLeft: '0px',\r\n    paddingRight: '0px',\r\n  },\r\n  navButtonsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginRight: '2.5%',\r\n  },\r\n}))\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar className={classes.paddingToolbar}>\r\n          <div className={classes.title}>\r\n            <Header />\r\n          </div>\r\n          <div className={classes.navButtonsContainer}>\r\n            {props.user.role === 'user' ? (\r\n              <div>\r\n                <Button\r\n                  className={\r\n                    props.path === '/entries'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/entries')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <ListAltIcon className={classes.entriesIcon} />\r\n                  {RO.entriesNav}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    props.path === '/tablet'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/tablet')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <TabletAndroidIcon className={classes.tabletIcon} />\r\n                  {RO.tablet}\r\n                </Button>\r\n              </div>\r\n            ) : props.user.role === 'super' ? (\r\n              <div>\r\n                <Button\r\n                  className={\r\n                    props.path === '/entries'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/entries')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <ListAltIcon className={classes.entriesIcon} />\r\n                  {RO.entriesNav}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    props.path === '/tracking'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/tracking')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <TrendingUpIcon className={classes.registerIcon} />\r\n                  {RO.trackingNav}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    props.path === '/companies'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/companies')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <BusinessIcon className={classes.companyIcon} />\r\n                  {RO.companiesNav}\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    props.path === '/users'\r\n                      ? classes.selectedButton\r\n                      : classes.button\r\n                  }\r\n                  onClick={() => history.push('/users')}\r\n                  color=\"inherit\"\r\n                >\r\n                  <PeopleIcon className={classes.companyIcon} />\r\n                  {RO.usersNav}\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n            <ConfirmationDialog\r\n              type=\"logout\"\r\n              onLogOutButton={() => {\r\n                props\r\n                  .createLog(\r\n                    props.user.name,\r\n                    props.user.surname,\r\n                    RO.tracking.logout,\r\n                    RO.tracking.usersTable\r\n                  )\r\n                  .then((resp) => {\r\n                    props.logout()\r\n                  })\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","import axios from '../../utils/Axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nexport const getCompanies = (page, rows) => (dispatch) =>\r\n  axios\r\n    .get(`/companies/?page=${page}&rows=${rows}`)\r\n    .then((resp) => ({ ...resp.data }))\r\n\r\nexport const createCompany = (newCompany) => (dispatch) =>\r\n  axios.post('/companies', { newCompany }).then((resp) => ({ ...resp.data }))\r\n\r\nexport const editCompany = (id, company) => (dispatch) =>\r\n  axios.put(`/companies/${id}`, company).then((resp) => ({ ...resp.data }))\r\n\r\nexport const deleteCompany = (id) => (dispatch) =>\r\n  axios.delete(`/companies/${id}`).then((resp) => ({ ...resp.data }))\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Header from '../common/Header'\r\nimport Modal from './SignatureModal'\r\nimport CanvasDraw from 'react-canvas-draw'\r\nimport axios from '../../utils/Axios'\r\nimport validator from 'validator'\r\nimport Navbar from '../common/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport Notifications from '../../utils/Notifications'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport CONSTANTS from '../../utils/Constants'\r\nimport { createUser } from '../../redux/actions/tablet'\r\nimport { getCompanies } from '../../redux/actions/companies'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst styles = (theme) => ({\r\n  nextButton: {\r\n    backgroundColor: '#336600',\r\n    '&:hover': {\r\n      backgroundColor: '#264d00',\r\n    },\r\n    marginRight: '0 ',\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n  },\r\n  gridContainer: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    height: '10em',\r\n    gridTemplateAreas: `\r\n                          'email sign'\r\n                          'phone sign'\r\n                        `,\r\n    gridTemplateColumns: '1fr 250px',\r\n    gridTemplateRows: '1fr 1fr',\r\n  },\r\n  email: {\r\n    gridArea: 'email',\r\n  },\r\n  phone: {\r\n    gridArea: 'phone',\r\n  },\r\n  sign: {\r\n    gridArea: 'sign',\r\n    marginTop: '1em',\r\n    marginLeft: '3.5em',\r\n  },\r\n  buttonsContainer: {\r\n    position: 'absolute',\r\n    bottom: '1em',\r\n    left: '2.5%',\r\n    right: '2.5%',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  tabletForm: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    WebkitTransform: 'translate(-50%, -50%)',\r\n    width: '95%',\r\n  },\r\n  identityFields: {\r\n    width: '10%',\r\n    marginRight: '2%',\r\n  },\r\n  fullHeight: {\r\n    height: '100%',\r\n  },\r\n  menuItem: {\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  header: {\r\n    marginLeft: '2.5%'\r\n  }\r\n})\r\n\r\nclass UserView extends React.Component {\r\n  state = {\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    show: false,\r\n    series: '',\r\n    number: '',\r\n    duration: '',\r\n    observations: '',\r\n    fields: {\r\n      errorName: false,\r\n      errorSurname: false,\r\n      errorEmail: false,\r\n      errorCompany: false,\r\n      errorPhone: false,\r\n      errorSignature: false,\r\n      errorSeries: false,\r\n      errorNumber: false,\r\n      errorDuration: false,\r\n      errorObservations: false,\r\n    },\r\n    companies: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCompanies().then((resp) => {\r\n      this.setState({ companies: resp[0] })\r\n    })\r\n  }\r\n\r\n  showDrawing = () => {\r\n    this.setState({ show: true })\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ company: event.target.value })\r\n  }\r\n\r\n  handleEntries = () => {\r\n    let isOk = true\r\n    let countErrors = 0\r\n\r\n    let auxFields = {\r\n      errorName: false,\r\n      errorSurname: false,\r\n      errorEmail: false,\r\n      errorCompany: false,\r\n      errorPhone: false,\r\n      errorSignature: false,\r\n      errorSeries: false,\r\n      errorNumber: false,\r\n      errorDuraion: false,\r\n    }\r\n\r\n    Object.entries(this.state.fields).forEach(([key, value]) => {\r\n      switch (key) {\r\n        case 'errorSurname':\r\n          if (!validator.isAlpha(this.state.surname)) {\r\n            isOk = false\r\n            auxFields.errorSurname = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorName':\r\n          if (!validator.isAlpha(this.state.name)) {\r\n            isOk = false\r\n            auxFields.errorName = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorEmail':\r\n          if (!validator.isEmail(this.state.email)) {\r\n            isOk = false\r\n            auxFields.errorEmail = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorCompany':\r\n          if (validator.isEmpty(this.state.company)) {\r\n            isOk = false\r\n            auxFields.errorCompany = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorPhone':\r\n          if (!validator.isMobilePhone(this.state.phone)) {\r\n            isOk = false\r\n            auxFields.errorPhone = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorSignature':\r\n          if (this.state.show === false) {\r\n            isOk = false\r\n            auxFields.errorSignature = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorSeries':\r\n          if (\r\n            !validator.isAlpha(this.state.series) ||\r\n            !(this.state.series.length > 0 && this.state.series.length < 3)\r\n          ) {\r\n            isOk = false\r\n            auxFields.errorSeries = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorNumber':\r\n          if (\r\n            !validator.isNumeric(this.state.number) ||\r\n            this.state.number.length !== 6\r\n          ) {\r\n            isOk = false\r\n            auxFields.errorNumber = true\r\n            countErrors ++\r\n          }\r\n          break\r\n        case 'errorDuration':\r\n          if (validator.isEmpty(this.state.duration)) {\r\n            isOk = false\r\n            auxFields.errorDuration = true\r\n            countErrors ++\r\n          }\r\n          break\r\n      }\r\n    })\r\n    this.setState({ fields: auxFields })\r\n\r\n    if (isOk) {\r\n      let entry = {\r\n        name: this.state.name,\r\n        surname: this.state.surname,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        company: this.state.company,\r\n        signature: localStorage.getItem('savedDrawing'),\r\n        series: this.state.series,\r\n        number: this.state.number,\r\n        duration: this.state.duration,\r\n        observations: this.state.observations,\r\n        date: new Date(),\r\n      }\r\n\r\n      this.setState({\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        phone: '',\r\n        company: '',\r\n        series: '',\r\n        number: '',\r\n        duration: '',\r\n        observations: '',\r\n        show: false,\r\n      })\r\n      this.props.createUser(entry).then((response) => {\r\n        Notifications.success(RO.notifications.ENTRY_REGISTRATION)\r\n      })\r\n    } else if(countErrors === 1 && auxFields.errorSignature){\r\n      Notifications.error(RO.notifications.SIGNATURE_ERROR)\r\n    }\r\n    else Notifications.error(RO.notifications.DATA_ERROR)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.fullHeight}>\r\n        {this.props.user ? (\r\n          <Navbar\r\n            showTabletButton={true}\r\n            showLogoutButton={true}\r\n            path={this.props.location.pathname}\r\n          />\r\n        ) : (\r\n          <div className={classes.header}>\r\n            <Header/>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.tabletForm}>\r\n          <TextField\r\n            error={this.state.fields.errorName}\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label={RO.entries.name}\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n          />\r\n          <TextField\r\n            error={this.state.fields.errorSurname}\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"surname\"\r\n            label={RO.entries.surname}\r\n            name=\"surname\"\r\n            autoComplete=\"surname\"\r\n            onChange={this.onChange}\r\n            value={this.state.surname}\r\n          />\r\n\r\n          <div className={classes.flexContainer}>\r\n            <TextField\r\n              className={classes.identityFields}\r\n              error={this.state.fields.errorSeries}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label={RO.entries.series}\r\n              name=\"series\"\r\n              autoComplete=\"name\"\r\n              onChange={this.onChange}\r\n              value={this.state.series}\r\n            />\r\n            <TextField\r\n              error={this.state.fields.errorNumber}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label={RO.entries.number}\r\n              name=\"number\"\r\n              autoComplete=\"name\"\r\n              onChange={this.onChange}\r\n              value={this.state.number}\r\n            />\r\n          </div>\r\n\r\n          <FormControl\r\n            fullWidth\r\n            required\r\n            margin=\"normal\"\r\n            error={this.state.fields.errorDuration}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              {RO.entries.duration}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.duration}\r\n              onChange={this.onChange}\r\n              name=\"duration\"\r\n            >\r\n              {CONSTANTS.DURATION_ARRAY.map((time, index) => {\r\n                return (\r\n                  <MenuItem className={classes.menuItem} value={time}>\r\n                    {time}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            fullWidth\r\n            required\r\n            margin=\"normal\"\r\n            error={this.state.fields.errorCompany}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              {RO.entries.company}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.company}\r\n              onChange={this.onChange}\r\n              name=\"company\"\r\n            >\r\n              {this.state.companies.length\r\n                ? this.state.companies.map((company, index) => {\r\n                    return (\r\n                      <MenuItem\r\n                        className={classes.menuItem}\r\n                        value={company.name}\r\n                      >\r\n                        {company.name}\r\n                      </MenuItem>\r\n                    )\r\n                  })\r\n                : null}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <div className={this.state.show ? classes.gridContainer : null}>\r\n            <TextField\r\n              className={classes.email}\r\n              error={this.state.fields.errorEmail}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              required\r\n              id=\"email\"\r\n              label={RO.entries.email}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n            />\r\n\r\n            {this.state.show ? (\r\n              <CanvasDraw\r\n                canvasHeight={CONSTANTS.CANVAS.HEIGHT}\r\n                canvasWidth={CONSTANTS.CANVAS.WIDTH}\r\n                disabled={true}\r\n                hideGrid={true}\r\n                ref={(canvasDraw) => (this.loadableCanvas = canvasDraw)}\r\n                saveData={localStorage.getItem('savedDrawing')}\r\n                loadTimeOffset={2}\r\n                className={classes.sign}\r\n              />\r\n            ) : null}\r\n\r\n            <TextField\r\n              className={classes.phone}\r\n              error={this.state.fields.errorPhone}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              required\r\n              id=\"phone\"\r\n              label={RO.entries.phone}\r\n              name=\"phone\"\r\n              autoComplete=\"phone\"\r\n              onChange={this.onChange}\r\n              value={this.state.phone}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"name\"\r\n            label={RO.entries.observations}\r\n            name=\"observations\"\r\n            autoComplete=\"name\"\r\n            onChange={this.onChange}\r\n            value={this.state.observations}\r\n          />\r\n        </div>\r\n        <div className={classes.buttonsContainer}>\r\n          <div className={classes.buttons}>\r\n            <Modal\r\n              showDrawing={this.showDrawing}\r\n              error={this.state.fields.errorSignature}\r\n            />\r\n            <Button\r\n              className={classes.nextButton}\r\n              onClick={() => {\r\n                this.handleEntries()\r\n              }}\r\n            >\r\n              {RO.next}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCompanies: () => dispatch(getCompanies()),\r\n    createUser: (entry) => dispatch(createUser(entry)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(UserView))\r\n","import axios from '../../utils/Axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\n\r\nexport const createUser = (entry) => (dispatch) =>\r\n  axios\r\n    .post('/tablet', { entry })\r\n    .then((resp) => ({ ...resp.data }))\r\n    .catch(errorHandler)\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from '../common/Header'\r\nimport { useParams } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Button from '@material-ui/core/Button'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { useHistory } from 'react-router'\r\nimport Notifications from '../../utils/Notifications'\r\nimport validator from 'validator'\r\nimport { connect } from 'react-redux'\r\nimport { checkToken, updatePassword } from '../../redux/actions/reset'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nfunction ResetPass(props) {\r\n  let { TOKEN, ID } = useParams()\r\n  const [expired, setExpired] = useState(false)\r\n  const [firstPass, setFirstPass] = useState('')\r\n  const [secondPass, setSecondPass] = useState('')\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    checkToken()\r\n  }, [TOKEN])\r\n\r\n  const checkToken = () => {\r\n    props.checkToken(TOKEN).then((resp) => {\r\n      if (resp !== StatusCodes.OK) {\r\n        setExpired(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    if (event.target.name === 'firstPass') setFirstPass(event.target.value)\r\n    else setSecondPass(event.target.value)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    if (validator.isEmpty(firstPass) || validator.isEmpty(secondPass))\r\n      Notifications.error(RO.notifications.ENTRY_ERROR)\r\n    else if (firstPass !== secondPass)\r\n      Notifications.error(RO.notifications.IDENTICAL_PASS)\r\n    else {\r\n      let password = firstPass\r\n      props.updatePassword(ID, password).then((resp) => {\r\n        history.push('/')\r\n        Notifications.success(RO.notifications.SUCCESS_PASS)\r\n      })\r\n    }\r\n  }\r\n\r\n  return !expired ? (\r\n    <div>\r\n      <Header />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {RO.newPass}\r\n          </Typography>\r\n          <form noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              label={RO.auth.new_password}\r\n              name=\"firstPass\"\r\n              autoComplete=\"password\"\r\n              type=\"password\"\r\n              autoFocus\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"secondPass\"\r\n              label={RO.auth.new_password}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={onChange}\r\n            />\r\n\r\n            <Button fullWidth onClick={handleReset}>\r\n              {RO.reset}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Header />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {RO.linkExpired}\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    checkToken: (TOKEN) => dispatch(checkToken(TOKEN)),\r\n    updatePassword: (ID, password) => dispatch(updatePassword(ID, password)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ResetPass)\r\n","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Notifications from '../../utils/Notifications'\r\nimport validator from 'validator'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { connect } from 'react-redux'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport { editCompany } from '../../redux/actions/companies'\r\nimport { editEntry } from '../../redux/actions/entries'\r\nimport { editUser } from '../../redux/actions/users'\r\nimport errorHandler from '../../utils/errorHandler'\r\nimport { getCompanies } from '../../redux/actions/companies'\r\nimport CONSTANTS from '../../utils/Constants'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  editButton: {\r\n    backgroundColor: 'inherit',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    color: 'black',\r\n    height: '1.5rem',\r\n    width: '1.5rem',\r\n    minWidth: '1rem',\r\n    marginRight: '0.5em'\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginTop: '16px',\r\n    marginRight: '24px'\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginRight: '1em'\r\n  },\r\n  seriesWidth: {\r\n    width: '15%',\r\n    marginRight: '3%',\r\n  },\r\n  menuItem: {\r\n    justifyContent: 'space-evenly',\r\n  }\r\n}))\r\n\r\nfunction EditDialog(props) {\r\n  const classes = useStyles()\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [data, setData] = React.useState({})\r\n  const [companies, setCompanies] = React.useState([])\r\n  const [errors, setErrors] = React.useState({})\r\n\r\n  useEffect(() => {\r\n    if (props.type === 'entry')\r\n      props.getCompaniesSelector().then((resp) => {\r\n        setCompanies(resp[0])\r\n      })\r\n    setData(props.data)\r\n  }, [props.data])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = (event) => {\r\n    setOpen(false)\r\n    setData(props.data)\r\n    setErrors({})\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const onSaveClick = () => {\r\n    if (props.type === 'entry') {\r\n      let isOk = true\r\n      let auxErrors = {\r\n        name: false,\r\n        surname: false,\r\n        email: false,\r\n        series: false,\r\n        number: false,\r\n        company: false,\r\n        observations: false,\r\n        phone: false,\r\n        duration: false,\r\n      }\r\n      Object.entries(data).forEach(([key, field]) => {\r\n        if (key === 'surname' && !validator.isAlpha(field)) {\r\n          isOk = false\r\n          auxErrors.surname = true\r\n        } else if (key === 'name' && !validator.isAlpha(field)) {\r\n          isOk = false\r\n          auxErrors.name = true\r\n        } else if (key === 'email' && !validator.isEmail(field)) {\r\n          isOk = false\r\n          auxErrors.email = true\r\n        } else if (key === 'company' && validator.isEmpty(field)) {\r\n          isOk = false\r\n          auxErrors.company = true\r\n        } else if (key === 'phone' && !validator.isMobilePhone(field)) {\r\n          isOk = false\r\n          auxErrors.phone = true\r\n        } else if (\r\n          key === 'series' &&\r\n          (!validator.isAlpha(field) || !(field.length > 0 && field.length < 3))\r\n        ) {\r\n          isOk = false\r\n          auxErrors.series = true\r\n        } else if (\r\n          key === 'number' &&\r\n          (!validator.isNumeric(field) || field.length !== 6)\r\n        ) {\r\n          isOk = false\r\n          auxErrors.number = true\r\n        } else if (key === 'duration' && validator.isEmpty(field)) {\r\n          isOk = false\r\n          auxErrors.duration = true\r\n        }\r\n      })\r\n      setErrors(auxErrors)\r\n      if (isOk) {\r\n        if (JSON.stringify(props.data) !== JSON.stringify(data)) {\r\n          props\r\n            .editEntry(props.data._id, data)\r\n            .then((resp) => {\r\n              props.getEntries()\r\n              props.createLog(\r\n                props.user.name,\r\n                props.user.surname,\r\n                RO.tracking.edit,\r\n                RO.tracking.entriesTable\r\n              )\r\n              Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n              handleClose()\r\n            })\r\n            .catch(errorHandler)\r\n        } else handleClose()\r\n      } else Notifications.error(RO.notifications.DATA_ERROR)\r\n    } else if (props.type === 'company') {\r\n      let isOk = true\r\n      let auxErrors = {\r\n        name: false,\r\n        representative: false,\r\n        email: false,\r\n        phone: false,\r\n      }\r\n      Object.entries(data).forEach(([key, field]) => {\r\n        if (key === 'name' && validator.isEmpty(field)) {\r\n          isOk = false\r\n          auxErrors.name = true\r\n        } else if (key === 'representative' && !validator.isAlpha(field)) {\r\n          isOk = false\r\n          auxErrors.representative = true\r\n        } else if (key === 'email' && !validator.isEmail(field)) {\r\n          isOk = false\r\n          auxErrors.email = true\r\n        } else if (key === 'phone' && !validator.isMobilePhone(field)) {\r\n          isOk = false\r\n          auxErrors.phone = true\r\n        }\r\n      })\r\n      setErrors(auxErrors)\r\n\r\n      if (isOk) {\r\n        if (JSON.stringify(props.data) !== JSON.stringify(data)) {\r\n          props\r\n            .editCompany(props.data._id, data)\r\n            .then((resp) => {\r\n              console.log('get companies')\r\n              props.getCompanies()\r\n              props.createLog(\r\n                props.user.name,\r\n                props.user.surname,\r\n                RO.tracking.edit,\r\n                RO.tracking.companiesTable\r\n              )\r\n              Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n              handleClose()\r\n            })\r\n            .catch(errorHandler)\r\n        } else handleClose()\r\n      } else {\r\n        Notifications.error(RO.notifications.DATA_ERROR)\r\n      }\r\n    } else if (props.type === 'user') {\r\n      let isOk = true\r\n      let auxErrors = {\r\n        name: false,\r\n        surname: false,\r\n        email: false,\r\n        phone: false,\r\n        role: false,\r\n      }\r\n      Object.entries(data).forEach(([key, field]) => {\r\n        if (key === 'name' && !validator.isAlpha(field)) {\r\n          isOk = false\r\n          auxErrors.name = true\r\n        } else if (key === 'surname' && !validator.isAlpha(field)) {\r\n          isOk = false\r\n          auxErrors.surname = true\r\n        } else if (key === 'email' && !validator.isEmail(field)) {\r\n          isOk = false\r\n          auxErrors.email = true\r\n        } else if (key === 'phone' && !validator.isMobilePhone(field)) {\r\n          isOk = false\r\n          auxErrors.phone = true\r\n        } else if (key === 'role' && validator.isEmpty(field)) {\r\n          isOk = false\r\n          auxErrors.role = true\r\n        }\r\n      })\r\n      setErrors(auxErrors)\r\n      if (isOk) {\r\n        if (JSON.stringify(props.data) !== JSON.stringify(data)) {\r\n          props\r\n            .editUser(props.data._id, data)\r\n            .then((resp) => {\r\n              props.getUsers()\r\n              props.createLog(\r\n                props.user.name,\r\n                props.user.surname,\r\n                RO.tracking.edit,\r\n                RO.tracking.usersTable\r\n              )\r\n              Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n              handleClose()\r\n            })\r\n            .catch(errorHandler)\r\n        } else handleClose()\r\n      } else {\r\n        Notifications.error(RO.notifications.DATA_ERROR)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.editButton} onClick={handleClickOpen}>\r\n        <EditIcon />\r\n      </Button>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <div className={classes.buttonContainer}>\r\n          <DialogTitle id=\"form-dialog-title\">{RO.edit}</DialogTitle>\r\n          <Button onClick={handleClose} className={classes.closeIcon}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        {props.type === 'entry' ? (\r\n          <DialogContent>\r\n            <TextField\r\n              error={errors.surname}\r\n              name=\"surname\"\r\n              margin=\"dense\"\r\n              id=\"surname\"\r\n              label={RO.entries.surname}\r\n              fullWidth\r\n              value={data.surname}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.name}\r\n              name=\"name\"\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={RO.entries.name}\r\n              fullWidth\r\n              value={data.name}\r\n              onChange={onChange}\r\n            />\r\n            <div className={classes.buttonContainer}>\r\n              <TextField\r\n                error={errors.series}\r\n                className={classes.seriesWidth}\r\n                name=\"series\"\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label={RO.entries.series}\r\n                fullWidth\r\n                value={data.series}\r\n                onChange={onChange}\r\n              />\r\n              <TextField\r\n                error={errors.number}\r\n                name=\"number\"\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label={RO.entries.number}\r\n                fullWidth\r\n                value={data.number}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <TextField\r\n              error={errors.email}\r\n              name=\"email\"\r\n              margin=\"dense\"\r\n              id=\"email\"\r\n              label={RO.entries.email}\r\n              fullWidth\r\n              value={data.email}\r\n              onChange={onChange}\r\n            />\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              margin=\"normal\"\r\n              error={errors.company}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {RO.entries.company}\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={data.company}\r\n                onChange={onChange}\r\n                name=\"company\"\r\n              >\r\n                {companies.length\r\n                  ? companies.map((company, index) => {\r\n                      return (\r\n                        <MenuItem\r\n                          className={classes.menuItem}\r\n                          value={company.name}\r\n                        >\r\n                          {company.name}\r\n                        </MenuItem>\r\n                      )\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              margin=\"normal\"\r\n              error={errors.duration}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {RO.entries.duration}\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={data.duration}\r\n                onChange={onChange}\r\n                name=\"duration\"\r\n              >\r\n                {CONSTANTS.DURATION_ARRAY.map((time, index) => {\r\n                  return <MenuItem className={classes.menuItem} value={time}>{time}</MenuItem>\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              error={errors.phone}\r\n              name=\"phone\"\r\n              margin=\"dense\"\r\n              id=\"phone\"\r\n              label={RO.entries.phone}\r\n              fullWidth\r\n              value={data.phone}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.observations}\r\n              name=\"observations\"\r\n              margin=\"dense\"\r\n              id=\"observation\"\r\n              label={RO.entries.observations}\r\n              fullWidth\r\n              value={data.observations}\r\n              onChange={onChange}\r\n            />\r\n          </DialogContent>\r\n        ) : props.type === 'company' ? (\r\n          <DialogContent>\r\n            <TextField\r\n              error={errors.name}\r\n              name=\"name\"\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Nume\"\r\n              fullWidth\r\n              value={data.name}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.email}\r\n              name=\"email\"\r\n              margin=\"dense\"\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              fullWidth\r\n              value={data.email}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.representative}\r\n              name=\"representative\"\r\n              margin=\"dense\"\r\n              id=\"representative\"\r\n              label=\"Reprezentant\"\r\n              fullWidth\r\n              value={data.representative}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.phone}\r\n              name=\"phone\"\r\n              margin=\"dense\"\r\n              id=\"phone\"\r\n              label=\"Telefon\"\r\n              fullWidth\r\n              value={data.phone}\r\n              onChange={onChange}\r\n            />\r\n          </DialogContent>\r\n        ) : props.type === 'user' ? (\r\n          <DialogContent>\r\n            <TextField\r\n              error={errors.surname}\r\n              name=\"surname\"\r\n              margin=\"dense\"\r\n              id=\"surname\"\r\n              label=\"Nume\"\r\n              fullWidth\r\n              value={data.surname}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.name}\r\n              name=\"name\"\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Prenume\"\r\n              fullWidth\r\n              value={data.name}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.email}\r\n              name=\"email\"\r\n              margin=\"dense\"\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              fullWidth\r\n              value={data.email}\r\n              onChange={onChange}\r\n            />\r\n            <TextField\r\n              error={errors.phone}\r\n              name=\"phone\"\r\n              margin=\"dense\"\r\n              id=\"phone\"\r\n              label=\"Telefon\"\r\n              fullWidth\r\n              value={data.phone}\r\n              onChange={onChange}\r\n            />\r\n            <FormControl fullWidth required margin=\"normal\" error={errors.role}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {RO.entries.role}\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={data.role}\r\n                onChange={onChange}\r\n                name=\"role\"\r\n              >\r\n                <MenuItem className={classes.menuItem} value={'super'}>Super Admin</MenuItem>\r\n                <MenuItem className={classes.menuItem} value={'user'}>User</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </DialogContent>\r\n        ) : null}\r\n        <DialogActions className={classes.actionsContainer}>\r\n          <Button color=\"default\" variant=\"contained\" onClick={handleClose}>\r\n            {RO.cancel}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              onSaveClick()\r\n            }}\r\n          >\r\n            {RO.save}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    editCompany: (id, company) => dispatch(editCompany(id, company)),\r\n    editEntry: (id, entry) => dispatch(editEntry(id, entry)),\r\n    editUser: (id, user) => dispatch(editUser(id, user)),\r\n    getCompaniesSelector: () => dispatch(getCompanies()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDialog)\r\n","import axios from '../../utils/Axios'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nexport const getUsers = (page, rows) => (dispatch) =>\r\n  axios\r\n    .get(`/users/?page=${page}&rows=${rows}`)\r\n    .then((resp) => ({ ...resp.data }))\r\n\r\nexport const createUser = (user) => (dispatch) =>\r\n  axios.post('/users', { user }).then((resp) => ({ ...resp.data }))\r\n\r\nexport const editUser = (id, user) => (dispatch) =>\r\n  axios.put(`/users/${id}`, user).then((resp) => ({ ...resp.data }))\r\n\r\nexport const deleteUser = (id) => (dispatch) =>\r\n  axios.delete(`/users/${id}`).then((resp) => ({ ...resp.data }))\r\n","import axios from '../../utils/Axios'\r\n\r\nexport const getEntries = (page, rows, startDate, endDate) => (dispatch) =>\r\n  axios\r\n    .get(\r\n      `/entries/?page=${page}&rows=${rows}&start=${startDate}&end=${endDate}`\r\n    )\r\n    .then((resp) => ({ ...resp.data }))\r\n\r\nexport const editEntry = (id, entry) => (dispatch) =>\r\n  axios.put(`/entries/${id}`, entry).then((resp) => ({ ...resp.data }))\r\n\r\nexport const deleteEntry = (id) => (dispatch) =>\r\n  axios.delete(`/entries/${id}`).then((resp) => ({ ...resp.data }))\r\n","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport CanvasDraw from 'react-canvas-draw'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  seriesWidth: {\r\n    width: '15%',\r\n    marginRight: '3%',\r\n  },\r\n  gridContainer: {\r\n    display: 'grid',\r\n    width: '100%',\r\n    gridTemplateAreas: `\r\n                          'email sign'\r\n                          'phone sign'\r\n                        `,\r\n    gridTemplateColumns: '1fr 5em',\r\n    gridTemplateRows: '1fr 1fr',\r\n  },\r\n  email: {\r\n    gridArea: 'email',\r\n  },\r\n  phone: {\r\n    gridArea: 'phone',\r\n  },\r\n  sign: {\r\n    gridArea: 'sign',\r\n    marginTop: '2em',\r\n  },\r\n  closeButton: {\r\n    marginRight: '1em',\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginTop: '16px',\r\n    marginRight: '24px',\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}))\r\n\r\nexport default function FormDialog(props) {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    setOpen(true)\r\n  }, [props.row])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n    props.onCloseModal()\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n      <div className={classes.flexContainer}>\r\n        <DialogTitle id=\"form-dialog-title\">{RO.details}</DialogTitle>\r\n        <Button onClick={handleClose} className={classes.closeIcon}>\r\n          <CloseIcon />\r\n        </Button>\r\n      </div>\r\n      <DialogContent>\r\n        <TextField\r\n          disabled\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label={RO.entries.name}\r\n          type=\"name\"\r\n          fullWidth\r\n          value={props.row.name}\r\n        />\r\n        <TextField\r\n          disabled\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label={RO.entries.surname}\r\n          type=\"name\"\r\n          fullWidth\r\n          value={props.row.surname}\r\n        />\r\n        <div className={classes.buttonContainer}>\r\n          <TextField\r\n            className={classes.seriesWidth}\r\n            disabled\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={RO.entries.series}\r\n            type=\"name\"\r\n            fullWidth\r\n            value={props.row.series}\r\n          />\r\n          <TextField\r\n            disabled\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={RO.entries.number}\r\n            type=\"name\"\r\n            fullWidth\r\n            value={props.row.number}\r\n          />\r\n        </div>\r\n        <TextField\r\n          disabled\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label={RO.entries.email}\r\n          type=\"email\"\r\n          fullWidth\r\n          value={props.row.email}\r\n        />\r\n        <TextField\r\n          disabled\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label={RO.entries.company}\r\n          type=\"name\"\r\n          fullWidth\r\n          value={props.row.company}\r\n        />\r\n        <div className={classes.gridContainer}>\r\n          <TextField\r\n            className={classes.phone}\r\n            disabled\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={RO.entries.phone}\r\n            type=\"name\"\r\n            fullWidth\r\n            value={props.row.phone}\r\n          />\r\n          <CanvasDraw\r\n            className={classes.sign}\r\n            canvasHeight={100}\r\n            canvasWidth={70}\r\n            disabled={true}\r\n            hideGrid={true}\r\n            saveData={props.row.signature}\r\n            loadTimeOffset={1}\r\n          />\r\n          <TextField\r\n            className={classes.email}\r\n            disabled\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={RO.entries.duration}\r\n            type=\"name\"\r\n            fullWidth\r\n            value={props.row.duration}\r\n          />\r\n        </div>\r\n        <TextField\r\n          disabled\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label={RO.entries.observations}\r\n          type=\"name\"\r\n          fullWidth\r\n          value={props.row.observations}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button className={classes.closeButton} onClick={handleClose}>\r\n          {RO.close}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Moment from 'react-moment'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport CONSTANTS from '../../utils/Constants'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport EditDialog from '../common/EditDialog'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Navbar from '../common/Navbar'\r\nimport Notifications from '../../utils/Notifications'\r\nimport ConfirmDialog from '../common/ConfirmDialog'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\r\nimport moment from 'moment'\r\nimport 'date-fns'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport InfoModal from './InfoModal'\r\nimport { deleteEntry } from '../../redux/actions/entries'\r\nimport { getEntries } from '../../redux/actions/entries'\r\nimport errorHandler from '../../utils/errorHandler.js'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    justifyContent: 'flex-end',\r\n    display: 'flex',\r\n    paddingBottom: '1.7em',\r\n    marginRight: '2.5%',\r\n    marginLeft: '2.5%'\r\n  },\r\n  datepicker: {\r\n    zIndex: '100',\r\n    marginRight: '0.3rem',\r\n    width: '9rem',\r\n    marginLeft: '1em',\r\n  },\r\n  dateSelector: {\r\n    display: 'flex',\r\n    marginRight: 'auto',\r\n    width: '12rem',\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    ['@media (max-width: 1300px)']: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  logout: {\r\n    marginRight: 'auto',\r\n  },\r\n  table: {\r\n    ['@media (min-width: 1200px)']: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  filterCloseButton: {\r\n    margin: '0',\r\n    marginLeft: '0.3rem',\r\n    height: '1rem',\r\n    width: '1rem',\r\n    minWidth: '1rem',\r\n  },\r\n  filterCloseIcon: {\r\n    height: '1.2rem',\r\n  },\r\n  filter: {\r\n    marginLeft: '0.7rem',\r\n    marginTop: '2em',\r\n    marginRight: '0.7em'\r\n  },\r\n  arrowButton: {\r\n    marginTop: '2.5em',\r\n    marginRight: '0.2em',\r\n    backgroundColor: 'inherit',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    color: 'black',\r\n    height: '1.5rem',\r\n    width: '1.5rem',\r\n    minWidth: '1rem',\r\n  },\r\n  selectableRows: {\r\n    cursor: 'pointer',\r\n  },\r\n  tablePadding:{\r\n    width: '95%', \r\n    marginLeft: 'auto', \r\n    marginRight: 'auto'\r\n  },\r\n  paginationMargin: {\r\n    marginRight: '2.5%'\r\n  }\r\n})\r\n\r\nconst columns = [\r\n  { label: RO.entries.index, minWidth: 20 },\r\n  { label: RO.entries.name, minWidth: 20 },\r\n  { label: RO.entries.surname, minWidth: 20 },\r\n  { label: RO.entries.email, minWidth: 20 },\r\n  { label: RO.entries.date, minWidth: 20 },\r\n  { label: RO.entries.company, minWidth: 20 },\r\n  { label: RO.entries.actions, minWidth: 10 },\r\n]\r\n\r\nclass EntriesList extends React.Component {\r\n  initialDate\r\n\r\n  state = {\r\n    classes: '',\r\n    page: 0,\r\n    rowsPerPage: CONSTANTS.INITIAL_ROWS_PER_PAGE,\r\n    entries: [],\r\n    startDate: moment().startOf('day').toDate(),\r\n    endDate: moment().endOf('day').toDate(),\r\n    count: 0,\r\n    csvData: [],\r\n    showFilterIcon: false,\r\n    currentRow: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInitialDate()\r\n    this.getEntries()\r\n  }\r\n\r\n  getEntries = () => {\r\n    this.props\r\n      .getEntries(\r\n        this.state.page,\r\n        this.state.rowsPerPage,\r\n        this.state.startDate,\r\n        this.state.endDate\r\n      )\r\n      .then((response) => {\r\n        let aux = []\r\n        response[0].map((entry, index) => {\r\n          aux[index] = {\r\n            [RO.entries.surname]: entry.surname,\r\n            [RO.entries.name]: entry.name,\r\n            [RO.entries.number]: entry.number,\r\n            [RO.entries.series]: entry.series,\r\n            [RO.entries.email]: entry.email,\r\n            [RO.entries.phone]: entry.phone,\r\n            [RO.entries.company]: entry.company,\r\n            [RO.entries.duration]: entry.duration,\r\n            [RO.entries.date]: entry.date,\r\n            [RO.entries.observations]: entry.observations,\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n          entries: response[0],\r\n          count: response[1],\r\n          csvData: aux,\r\n        })\r\n      })\r\n      .catch(errorHandler)\r\n  }\r\n\r\n  setInitialDate = () => {\r\n    this.initialDate = moment().startOf('day').toDate()\r\n  }\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({ page: newPage }, () => {\r\n      this.getEntries()\r\n    })\r\n  }\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState(\r\n      {\r\n        rowsPerPage: parseInt(event.target.value, CONSTANTS.PARSE_INT_RADIX),\r\n        page: 0,\r\n      },\r\n      () => {\r\n        this.getEntries()\r\n      }\r\n    )\r\n  }\r\n\r\n  onDeleteButton = (id) => {\r\n    this.props.deleteEntry(id).then((resp) => {\r\n      Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n      this.getEntries()\r\n      this.props.createLog(\r\n        this.props.user.name,\r\n        this.props.user.surname,\r\n        RO.tracking.delete,\r\n        RO.tracking.entriesTable\r\n      )\r\n    })\r\n    .catch(errorHandler)\r\n  }\r\n\r\n  onCloseFilter = (event) => {\r\n    event.stopPropagation()\r\n    this.setState(\r\n      {\r\n        showFilterIcon: false,\r\n        startDate: this.initialDate,\r\n        endDate: moment().endOf('day').toDate(),\r\n      },\r\n      () => {\r\n        this.handleChangePage(event, 0)\r\n      }\r\n    )\r\n  }\r\n\r\n  onFilterClick = () => {\r\n    if (this.state.startDate > this.state.endDate)\r\n      Notifications.error(RO.notifications.DATE_ERROR)\r\n    else {\r\n      if (!moment(this.initialDate).isSame(this.state.startDate)) {\r\n        this.getEntries()\r\n        this.setState({ showFilterIcon: true })\r\n      } else {\r\n        this.setState({ showFilterIcon: false })\r\n        this.getEntries()\r\n      }\r\n    }\r\n  }\r\n  onArrowClick = (step) => {\r\n    let startDate, endDate\r\n\r\n    if (step === RO.NEXT) {\r\n      startDate = moment(this.state.startDate).add(1, 'days').toDate()\r\n      endDate = moment(this.state.endDate).add(1, 'days').toDate()\r\n    } else {\r\n      startDate = moment(this.state.startDate).subtract(1, 'days').toDate()\r\n      endDate = moment(this.state.endDate).subtract(1, 'days').toDate()\r\n    }\r\n\r\n    if (moment(startDate).isAfter(this.initialDate))\r\n      return Notifications.error(RO.notifications.DATE_ERROR)\r\n\r\n    this.setState({ startDate: startDate, endDate: endDate }, () => {\r\n      this.onFilterClick()\r\n    })\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ currentRow: {} })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <Navbar path={this.props.location.pathname} />\r\n        <div className={classes.root}>\r\n          <div className={classes.dateSelector}>\r\n            <Button className={classes.arrowButton}>\r\n              <KeyboardArrowLeftIcon\r\n                onClick={() => {\r\n                  this.onArrowClick(RO.PREV)\r\n                }}\r\n              />\r\n            </Button>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container>\r\n                <KeyboardDatePicker\r\n                  autoOk={true}\r\n                  maxDate={new Date()}\r\n                  variant=\"inline\"\r\n                  format={RO.dateFormat}\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label={RO.sort}\r\n                  value={this.state.startDate}\r\n                  onChange={(date) => {\r\n                    this.setState(\r\n                      {\r\n                        startDate: date,\r\n                        endDate: moment(date).endOf('day').toDate(),\r\n                      },\r\n                      this.onFilterClick()\r\n                    )\r\n                  }}\r\n                  KeyboardButtonProps={{ 'aria-label': 'change date' }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <Button className={classes.arrowButton}>\r\n              <KeyboardArrowRightIcon\r\n                onClick={() => {\r\n                  this.onArrowClick(RO.NEXT)\r\n                }}\r\n              />\r\n            </Button>\r\n          </div>\r\n\r\n          <div className={classes.datepicker}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container>\r\n                <KeyboardDatePicker\r\n                  autoOk={true}\r\n                  maxDate={new Date()}\r\n                  variant=\"inline\"\r\n                  format={RO.dateFormat}\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label={RO.startDate}\r\n                  value={this.state.startDate}\r\n                  onChange={(date) => {\r\n                    this.setState({ startDate: date })\r\n                  }}\r\n                  KeyboardButtonProps={{ 'aria-label': 'change date' }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n\r\n          <div className={classes.datepicker}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container>\r\n                <KeyboardDatePicker\r\n                  autoOk={true}\r\n                  maxDate={new Date()}\r\n                  variant=\"inline\"\r\n                  format={RO.dateFormat}\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label={RO.endDate}\r\n                  value={this.state.endDate}\r\n                  onChange={(date) => {\r\n                    this.setState({ endDate: date })\r\n                  }}\r\n                  KeyboardButtonProps={{ 'aria-label': 'change date' }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              className={classes.filter}\r\n              onClick={() => this.onFilterClick()}\r\n            >\r\n              {RO.filter}\r\n              {this.state.showFilterIcon === true ? (\r\n                <Button\r\n                  onClick={(event) => this.onCloseFilter(event)}\r\n                  className={classes.filterCloseButton}\r\n                >\r\n                  <CloseIcon className={classes.filterCloseIcon} />\r\n                </Button>\r\n              ) : null}\r\n            </Button>\r\n          </div>\r\n          <ConfirmDialog type=\"export\" data={this.state.csvData} />\r\n        </div>\r\n\r\n        {Object.keys(this.state.currentRow).length !== 0 ? (\r\n          <InfoModal\r\n            row={this.state.currentRow}\r\n            onCloseModal={this.onCloseModal}\r\n          />\r\n        ) : null}\r\n\r\n        <div className={classes.table}>\r\n          <TableContainer>\r\n            <Table className={classes.tablePadding}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      size={'small'}\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.entries.map((entry, index) => (\r\n                  <TableRow\r\n                    hover={true}\r\n                    className={classes.selectableRows}\r\n                    onClick={(event) => {\r\n                      if (event.target.tagName && event.target.tagName.toLowerCase() === 'td')\r\n                        this.setState({ currentRow: entry })\r\n                    }}\r\n                  >\r\n                    <TableCell>\r\n                      {this.state.page * this.state.rowsPerPage + index + 1}\r\n                    </TableCell>\r\n                    <TableCell>{entry.surname}</TableCell>\r\n                    <TableCell>{entry.name}</TableCell>\r\n                    <TableCell>{entry.email}</TableCell>\r\n                    <TableCell>\r\n                      <Moment format={CONSTANTS.DATE_FORMAT}>\r\n                        {entry.date}\r\n                      </Moment>\r\n                    </TableCell>\r\n                    <TableCell>{entry.company}</TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.actions}>\r\n                        <EditDialog\r\n                          type={'entry'}\r\n                          data={entry}\r\n                          getEntries={this.getEntries}\r\n                        />\r\n                        <ConfirmDialog\r\n                          type={'delete'}\r\n                          onDeleteButton={() => this.onDeleteButton(entry._id)}\r\n                        />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            component=\"div\"\r\n            className={classes.paginationMargin}\r\n            count={this.state.count}\r\n            rowsPerPageOptions={CONSTANTS.ROWS_PER_PAGE_ARRAY}\r\n            page={this.state.page}\r\n            onChangePage={this.handleChangePage}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    deleteEntry: (id) => dispatch(deleteEntry(id)),\r\n    getEntries: (page, rows, startDate, endDate) =>\r\n      dispatch(getEntries(page, rows, startDate, endDate)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(EntriesList))\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiTableCell: {\r\n            head: {\r\n                fontSize: 20,\r\n                fontWeight: 'bold',\r\n                backgroundColor: 'white',\r\n                color: 'black',\r\n            },\r\n            body: {\r\n                fontSize: 14,\r\n            },\r\n        },\r\n\r\n        MuiTableRow: {\r\n            root: {\r\n               // '&:nth-of-type(odd)': {\r\n                  backgroundColor: 'white',\r\n               // }\r\n            },\r\n        },\r\n\r\n         MuiButton :{\r\n             root: {\r\n                 backgroundColor: \"#3f50b5\",\r\n                 color : \"white\",\r\n                 '&:hover': {\r\n                    backgroundColor: '#0e24a1',\r\n                 }\r\n            },\r\n            \r\n         },\r\n\r\n    }\r\n});\r\n\r\nexport default theme","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Notifications from '../../utils/Notifications'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport validator from 'validator'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport { createCompany } from '../../redux/actions/companies'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetLink: {\r\n    color: '#3f50b5',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: '2%',\r\n    cursor: 'pointer',\r\n    fontSize: '1.05rem',\r\n    '&:hover': {\r\n      color: '#0e24a1',\r\n    },\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginRight: '24px',\r\n    marginTop: '16px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  createButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginRight: '2.5%',\r\n    marginTop: '1.5em',\r\n    marginBottom: '1.3em',\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginLeft: '1em',\r\n    marginRight: '1em',\r\n  },\r\n}))\r\n\r\nfunction AddCompanyDialog(props) {\r\n  const initialFields = {\r\n    name: { value: '', error: false },\r\n    representative: { value: '', error: false },\r\n    phone: { value: '', error: false },\r\n    email: { value: '', error: false },\r\n  }\r\n  const [open, setOpen] = React.useState(false)\r\n  const [company, setCompany] = React.useState(initialFields)\r\n\r\n  const classes = useStyles()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setCompany(initialFields)\r\n    setOpen(false)\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setCompany({\r\n      ...company,\r\n      [event.target.name]: { value: event.target.value, error: false },\r\n    })\r\n  }\r\n\r\n  const addCompany = () => {\r\n    let isOk = true\r\n    let auxFields = {\r\n      name: company.name,\r\n      representative: company.representative,\r\n      phone: company.phone,\r\n      email: company.email,\r\n    }\r\n\r\n    Object.entries(company).forEach(([key, field]) => {\r\n      if (key === 'name' && validator.isEmpty(field.value)) {\r\n        isOk = false\r\n        auxFields.name = { value: field.value, error: true }\r\n      } else if (key === 'representative' && !validator.isAlpha(field.value)) {\r\n        isOk = false\r\n        auxFields.representative = { value: field.value, error: true }\r\n      } else if (key === 'phone' && !validator.isMobilePhone(field.value)) {\r\n        isOk = false\r\n        auxFields.phone = { value: field.value, error: true }\r\n      } else if (key === 'email' && !validator.isEmail(field.value)) {\r\n        isOk = false\r\n        auxFields.email = { value: field.value, error: true }\r\n      }\r\n    })\r\n    setCompany(auxFields)\r\n\r\n    if (isOk === true) {\r\n      let newCompany = {\r\n        name: company.name.value,\r\n        representative: company.representative.value,\r\n        phone: company.phone.value,\r\n        email: company.email.value,\r\n      }\r\n      props\r\n        .createCompany(newCompany)\r\n        .then((resp) => {\r\n          Notifications.success(RO.notifications.SUCCESS_ADD_COMPANY)\r\n          props.getCompanies()\r\n          handleClose()\r\n          props.createLog(\r\n            props.user.name,\r\n            props.user.surname,\r\n            RO.tracking.add,\r\n            RO.tracking.companiesTable\r\n          )\r\n        })\r\n        .catch(errorHandler)\r\n    } else {\r\n      Notifications.error(RO.notifications.DATA_ERROR)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.createButton}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n          {RO.addCompany}\r\n        </Button>\r\n      </div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <div className={classes.buttonContainer}>\r\n          <DialogTitle id=\"form-dialog-title\">{RO.addCompany}</DialogTitle>\r\n          <Button onClick={handleClose} className={classes.closeIcon}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        <DialogContent>\r\n          <TextField\r\n            error={company.name.error}\r\n            name=\"name\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label={RO.companies.name}\r\n            fullWidth\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            error={company.representative.error}\r\n            name=\"representative\"\r\n            margin=\"dense\"\r\n            label={RO.companies.representative}\r\n            fullWidth\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            error={company.phone.error}\r\n            name=\"phone\"\r\n            margin=\"dense\"\r\n            label={RO.companies.phone}\r\n            fullWidth\r\n            onChange={onChange}\r\n          />\r\n          <TextField\r\n            error={company.email.error}\r\n            name=\"email\"\r\n            margin=\"dense\"\r\n            label={RO.companies.email}\r\n            fullWidth\r\n            onChange={onChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classes.actionsContainer}>\r\n          <Button color=\"default\" variant=\"contained\" onClick={handleClose}>\r\n            {RO.cancel}\r\n          </Button>\r\n          <Button onClick={addCompany} color=\"primary\" variant=\"contained\">\r\n            {RO.add}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    createCompany: (newCompany) => dispatch(createCompany(newCompany)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCompanyDialog)\r\n","import React, { useEffect } from 'react'\r\nimport Navbar from '../common/Navbar'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport CONSTANTS from '../../utils/Constants'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport EditDialog from '../common/EditDialog'\r\nimport ConfirmDialog from '../common/ConfirmDialog'\r\nimport Notifications from '../../utils/Notifications'\r\nimport AddCompanyDialog from './AddCompanyDialog'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport { getCompanies, deleteCompany } from '../../redux/actions/companies'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    display: 'flex',\r\n    ['@media (max-width: 1300px)']: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  table: {\r\n    ['@media (min-width: 1200px)']: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  createButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    margin: '1.3em',\r\n  },\r\n  tablePadding:{\r\n    width: '95%', \r\n    marginLeft: 'auto', \r\n    marginRight: 'auto'\r\n  },\r\n  paginationMargin: {\r\n    marginRight: '2.5%'\r\n  }\r\n}))\r\n\r\nfunction Companies(props) {\r\n  const [companies, setCompanies] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [rows, setRows] = React.useState(CONSTANTS.INITIAL_ROWS_PER_PAGE)\r\n  const [count, setCount] = React.useState(0)\r\n\r\n  const classes = useStyles()\r\n\r\n  const columns = [\r\n    { label: RO.companies.index, minWidth: 20 },\r\n    { label: RO.companies.name, minWidth: 20 },\r\n    { label: RO.companies.representative, minWidth: 20 },\r\n    { label: RO.companies.phone, minWidth: 20 },\r\n    { label: RO.companies.email, minWidth: 20 },\r\n    { label: RO.companies.actions, minWidth: 20 },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getCompanies()\r\n  }, [page, rows, count])\r\n\r\n  const getCompanies = () => {\r\n    props\r\n      .getCompanies(page, rows)\r\n      .then((resp) => {\r\n        setCompanies(resp[0])\r\n        setCount(resp[1])\r\n      })\r\n      .catch(errorHandler)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRows(parseInt(event.target.value, CONSTANTS.PARSE_INT_RADIX))\r\n    setPage(0)\r\n  }\r\n\r\n  const onDeleteButton = (id) => {\r\n    props.deleteCompany(id).then((resp) => {\r\n      Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n      getCompanies()\r\n      props.createLog(\r\n        props.user.name,\r\n        props.user.surname,\r\n        RO.tracking.delete,\r\n        RO.tracking.companiesTable\r\n      )\r\n      .catch(errorHandler)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.table}>\r\n      <Navbar path={props.location.pathname} />\r\n      <AddCompanyDialog getCompanies={getCompanies} />\r\n      <TableContainer>\r\n        <Table className={classes.tablePadding}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {companies.map((company, index) => (\r\n              <TableRow>\r\n                <TableCell>{page * rows + index + 1}</TableCell>\r\n                <TableCell>{company.name}</TableCell>\r\n                <TableCell>{company.representative}</TableCell>\r\n                <TableCell>{company.phone}</TableCell>\r\n                <TableCell>{company.email}</TableCell>\r\n                <TableCell>\r\n                  <div className={classes.actions}>\r\n                    <EditDialog\r\n                      type={'company'}\r\n                      data={company}\r\n                      getCompanies={() => getCompanies()}\r\n                    />\r\n                    <ConfirmDialog\r\n                      type={'delete'}\r\n                      onDeleteButton={() => onDeleteButton(company._id)}\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className={classes.paginationMargin}\r\n        component=\"div\"\r\n        count={count}\r\n        rowsPerPageOptions={CONSTANTS.ROWS_PER_PAGE_ARRAY}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        rowsPerPage={rows}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    getCompanies: (page, rows) => dispatch(getCompanies(page, rows)),\r\n    deleteCompany: (id) => dispatch(deleteCompany(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Companies)\r\n","import React, { useEffect } from 'react'\r\nimport Navbar from '../common/Navbar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport CONSTANTS from '../../utils/Constants'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { getLogs } from '../../redux/actions/tracking'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    display: 'flex',\r\n    ['@media (max-width: 1300px)']: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  table: {\r\n    ['@media (min-width: 1200px)']: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  createButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    margin: '1.3em',\r\n  },\r\n  tablePadding:{\r\n    width: '95%', \r\n    marginLeft: 'auto', \r\n    marginRight: 'auto'\r\n  },\r\n  paginationMargin: {\r\n    marginRight: '2.5%'\r\n  }\r\n}))\r\n\r\nfunction Tracking(props) {\r\n  const [tracking, setTracking] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [rows, setRows] = React.useState(CONSTANTS.INITIAL_ROWS_PER_PAGE)\r\n  const [count, setCount] = React.useState(0)\r\n\r\n  const classes = useStyles()\r\n\r\n  const columns = [\r\n    { label: RO.tracking.index, minWidth: 20 },\r\n    { label: RO.tracking.name, minWidth: 20 },\r\n    { label: RO.tracking.surname, minWidth: 20 },\r\n    { label: RO.tracking.action, minWidth: 20 },\r\n    { label: RO.tracking.date, minWidth: 20 },\r\n    { label: RO.tracking.table, minWidth: 20 },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    props.getLogs(page, rows).then(resp => {\r\n      setTracking(resp[0])\r\n      setCount(resp[1])\r\n    })\r\n    .catch(errorHandler)\r\n  }, [page, rows, count])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRows(parseInt(event.target.value, CONSTANTS.PARSE_INT_RADIX))\r\n    setPage(0)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar path={props.location.pathname} />\r\n      <div className={classes.table}>\r\n        <TableContainer>\r\n          <Table className={classes.tablePadding}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tracking\r\n                ? tracking.map((tracking, index) => (\r\n                    <TableRow>\r\n                      <TableCell size={\"small\"}>{page * rows + index + 1}</TableCell>\r\n                      <TableCell size={\"small\"}>{tracking.name}</TableCell>\r\n                      <TableCell size={\"small\"}>{tracking.surname}</TableCell>\r\n                      <TableCell size={\"small\"}>{tracking.action}</TableCell>\r\n                      <TableCell size={\"small\"}>\r\n                        <Moment format={CONSTANTS.DATE_FORMAT}>\r\n                          {tracking.date}\r\n                        </Moment>\r\n                      </TableCell>\r\n                      <TableCell>{tracking.table}</TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          className={classes.paginationMargin}\r\n          component=\"div\"\r\n          count={count}\r\n          rowsPerPageOptions={CONSTANTS.ROWS_PER_PAGE_ARRAY}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={rows}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getLogs: (page, rows) => dispatch(getLogs(page, rows)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Tracking)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport validator from 'validator'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Notifications from '../../utils/Notifications'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport { createUser } from '../../redux/actions/users'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst styles = (theme) => ({\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  createButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    margin: '2.5%',\r\n    marginTop: '1.5em',\r\n    marginBottom: '1.3em'\r\n  },\r\n  closeIcon: {\r\n    backgroundColor: 'inherit',\r\n    color: 'black',\r\n    '&:hover': {\r\n      backgroundColor: '#DADADA',\r\n    },\r\n    height: '2.3rem',\r\n    width: '2.3rem',\r\n    minWidth: '1rem',\r\n    marginRight: '24px',\r\n    marginTop: '16px'\r\n  },\r\n  actionsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '1em',\r\n    marginRight: '1em',\r\n  },\r\n})\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n    role: '',\r\n    fields: {\r\n      errorName: false,\r\n      errorSurname: false,\r\n      errorEmail: false,\r\n      errorCompany: false,\r\n      errorPhone: false,\r\n      errorRole: false,\r\n    },\r\n    open: false,\r\n  }\r\n\r\n  handleRegister = () => {\r\n    let isOk = true\r\n\r\n    let auxFields = {\r\n      errorName: false,\r\n      errorSurname: false,\r\n      errorEmail: false,\r\n      errorCompany: false,\r\n      errorPhone: false,\r\n      errorRole: false,\r\n    }\r\n\r\n    Object.entries(this.state.fields).forEach(([key, value]) => {\r\n      switch (key) {\r\n        case 'errorSurname':\r\n          if (!validator.isAlpha(this.state.surname)) {\r\n            isOk = false\r\n            auxFields.errorSurname = true\r\n          }\r\n          break\r\n        case 'errorName':\r\n          if (!validator.isAlpha(this.state.name)) {\r\n            isOk = false\r\n            auxFields.errorName = true\r\n          }\r\n          break\r\n        case 'errorEmail':\r\n          if (!validator.isEmail(this.state.email)) {\r\n            isOk = false\r\n            auxFields.errorEmail = true\r\n          }\r\n          break\r\n        case 'errorPhone':\r\n          if (!validator.isMobilePhone(this.state.phone)) {\r\n            isOk = false\r\n            auxFields.errorPhone = true\r\n          }\r\n          break\r\n        case 'errorRole':\r\n          if (validator.isEmpty(this.state.role)) {\r\n            isOk = false\r\n            auxFields.errorRole = true\r\n          }\r\n          break\r\n      }\r\n    })\r\n    this.setState({ fields: auxFields })\r\n\r\n    if (isOk) {\r\n      let user = {\r\n        name: this.state.name,\r\n        surname: this.state.surname,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        role: this.state.role,\r\n        password: this.state.password,\r\n      }\r\n      this.props\r\n        .createUser(user)\r\n        .then((response) => {\r\n          Notifications.success(RO.notifications.ADMIN_REGISTRATION)\r\n          this.props.getUsers()\r\n          this.setState({\r\n            name: '',\r\n            surname: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n            role: '',\r\n          })\r\n          this.props.createLog(\r\n            this.props.user.name,\r\n            this.props.user.surname,\r\n            RO.tracking.add,\r\n            RO.tracking.usersTable\r\n          )\r\n          this.handleClose()\r\n        })\r\n        .catch(errorHandler)\r\n    } else Notifications.error(RO.notifications.ADMIN_FAIL_REGISTRATION)\r\n  }\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <div className={classes.createButton}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.handleClickOpen}\r\n          >\r\n            {RO.addUser}\r\n          </Button>\r\n        </div>\r\n        <Dialog open={this.state.open} aria-labelledby=\"form-dialog-title\">\r\n          <div className={classes.buttonContainer}>\r\n            <DialogTitle id=\"form-dialog-title\">{RO.addUser}</DialogTitle>\r\n            <Button onClick={this.handleClose} className={classes.closeIcon}>\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n          <DialogContent>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label={RO.entries.surname}\r\n              name=\"surname\"\r\n              autoComplete=\"surname\"\r\n              autoFocus\r\n              onChange={this.onChange}\r\n              value={this.state.surname}\r\n              error={this.state.fields.errorSurname}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"name\"\r\n              label={RO.entries.name}\r\n              type=\"name\"\r\n              id=\"name\"\r\n              autoComplete=\"name\"\r\n              onChange={this.onChange}\r\n              value={this.state.name}\r\n              error={this.state.fields.errorName}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label={RO.entries.email}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              error={this.state.fields.errorEmail}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"phone\"\r\n              label={RO.entries.phone}\r\n              id=\"phone\"\r\n              autoComplete=\"phone\"\r\n              onChange={this.onChange}\r\n              value={this.state.phone}\r\n              error={this.state.fields.errorPhone}\r\n            />\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              margin=\"normal\"\r\n              error={this.state.fields.errorRole}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {RO.entries.role}\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={this.state.role}\r\n                onChange={this.onChange}\r\n                name=\"role\"\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value={'super'}>Super Admin</MenuItem>\r\n                <MenuItem value={'user'}>User</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions className={classes.actionsContainer}>\r\n            <Button\r\n              color=\"default\"\r\n              variant=\"contained\"\r\n              onClick={this.handleClose}\r\n            >\r\n              {RO.cancel}\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleRegister}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              {RO.add}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    createUser: (user) => dispatch(createUser(user)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Register))\r\n","import React, { useEffect } from 'react'\r\nimport Navbar from '../common/Navbar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport CONSTANTS from '../../utils/Constants'\r\nimport Notifications from '../../utils/Notifications'\r\nimport axios from '../../utils/Axios'\r\nimport Moment from 'react-moment'\r\nimport AddUserDialog from './AddUserDialog'\r\nimport EditDialog from '../common/EditDialog'\r\nimport ConfirmDialog from '../common/ConfirmDialog'\r\nimport { connect } from 'react-redux'\r\nimport { createLog } from '../../redux/actions/tracking'\r\nimport { getUsers, deleteUser } from '../../redux/actions/users'\r\nimport errorHandler from '../../utils/errorHandler'\r\nconst RO = require('../../utils/language/RO.json')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    display: 'flex',\r\n    ['@media (max-width: 1300px)']: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  table: {\r\n    ['@media (min-width: 1200px)']: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  tablePadding: {\r\n    width: '95%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  paginationMargin: {\r\n    marginRight: '2.5%'\r\n  }\r\n}))\r\n\r\nfunction Users(props) {\r\n  const [users, setUsers] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [rows, setRows] = React.useState(CONSTANTS.INITIAL_ROWS_PER_PAGE)\r\n  const [count, setCount] = React.useState(0)\r\n\r\n  const classes = useStyles()\r\n\r\n  const columns = [\r\n    { label: RO.entries.index, minWidth: 20 },\r\n    { label: RO.entries.name, minWidth: 20 },\r\n    { label: RO.entries.surname, minWidth: 20 },\r\n    { label: RO.entries.email, minWidth: 20 },\r\n    { label: RO.entries.date, minWidth: 20 },\r\n    { label: RO.entries.phone, minWidth: 20 },\r\n    { label: RO.entries.role, minWidth: 20 },\r\n    { label: RO.entries.actions, minWidth: 20 },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [page, rows, count])\r\n\r\n  const getUsers = () => {\r\n    props\r\n      .getUsers(page, rows)\r\n      .then((resp) => {\r\n        setUsers(resp[0])\r\n        setCount(resp[1])\r\n      })\r\n      .catch(errorHandler)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRows(parseInt(event.target.value, CONSTANTS.PARSE_INT_RADIX))\r\n    setPage(0)\r\n  }\r\n\r\n  const onDeleteButton = (id) => {\r\n    props\r\n      .deleteUser(id)\r\n      .then((resp) => {\r\n        Notifications.success(RO.notifications.SUCCESS_EDIT)\r\n        getUsers()\r\n        props.createLog(\r\n          props.user.name,\r\n          props.user.surname,\r\n          RO.tracking.delete,\r\n          RO.tracking.usersTable\r\n        )\r\n      })\r\n      .catch(errorHandler)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar path={props.location.pathname} />\r\n      <AddUserDialog getUsers={getUsers} />\r\n      <div className={classes.table}>\r\n        <TableContainer>\r\n          <Table className={classes.tablePadding}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users\r\n                ? users.map((user, index) => (\r\n                    <TableRow>\r\n                      <TableCell >\r\n                        {page * rows + index + 1}\r\n                      </TableCell>\r\n                      <TableCell>{user.name}</TableCell>\r\n                      <TableCell>{user.surname}</TableCell>\r\n                      <TableCell>{user.email}</TableCell>\r\n                      <TableCell>\r\n                        <Moment format={CONSTANTS.DATE_FORMAT}>\r\n                          {user.date}\r\n                        </Moment>\r\n                      </TableCell>\r\n                      <TableCell>{user.phone}</TableCell>\r\n                      <TableCell>{user.role}</TableCell>\r\n                      <TableCell>\r\n                        <div className={classes.actions}>\r\n                          <EditDialog\r\n                            type={'user'}\r\n                            data={user}\r\n                            getUsers={() => getUsers()}\r\n                          />\r\n                          <ConfirmDialog\r\n                            type={'delete'}\r\n                            onDeleteButton={() => onDeleteButton(user._id)}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          className={classes.paginationMargin}\r\n          component=\"div\"\r\n          count={count}\r\n          rowsPerPageOptions={CONSTANTS.ROWS_PER_PAGE_ARRAY}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={rows}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createLog: (name, surname, action, table) =>\r\n      dispatch(createLog(name, surname, action, table)),\r\n    getUsers: (page, rows) => dispatch(getUsers(page, rows)),\r\n    deleteUser: (id) => dispatch(deleteUser(id)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n","import React, { useEffect } from 'react'\r\nimport Login from './components/login/Login'\r\nimport UserView from './components/tablet/UserView'\r\nimport ResetPass from './components/resetPass/ResetPass'\r\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom'\r\nimport EntriesList from './components/entriesList/EntriesList'\r\nimport theme from '../src/utils/Theme'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport axios from './utils/Axios'\r\nimport Companies from './components/companies/Companies'\r\nimport Tracking from './components/tracking/Tracking'\r\nimport Users from './components/users/Users'\r\n\r\nfunction Root(props) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        {props.user.role === 'user' ? (\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/entries\" component={EntriesList} />\r\n            <Route exact path=\"/tablet\" component={UserView} />\r\n            <Route exact path=\"/reset/:TOKEN/:ID\" component={ResetPass} />\r\n            <Redirect to=\"/entries\" />\r\n          </Switch>\r\n        ) : props.user.role === 'super' ? (\r\n          <Switch>\r\n            <Route exact path=\"/entries\" component={EntriesList} />\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/companies\" component={Companies} />\r\n            <Route exact path=\"/reset/:TOKEN/:ID\" component={ResetPass} />\r\n            <Route exact path=\"/tracking\" component={Tracking} />\r\n            <Route exact path=\"/users\" component={Users} />\r\n            <Redirect to=\"/tracking\" />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/tablet\" component={UserView} />\r\n            <Route exact path=\"/reset/:TOKEN/:ID\" component={ResetPass} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { user: state.user }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Root)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { Provider } from 'react-redux'\r\nimport {store, persistor} from './redux/store/store'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n       <Provider store={store}> \r\n            <PersistGate  loading={null} persistor={persistor}>\r\n                <Root/>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root') \r\n  );\r\n\r\nexport default Root;"],"sourceRoot":""}